type LoanStatus = variant {
  Pending;
  Approved;
  Rejected;
  Active;
  PaidOff;
  Defaulted;
};

type LoanType = variant {
  Personal;
  Business;
  Education;
  Housing;
  Agriculture;
  Medical;
};

type LoanApplication = record {
  id: text;
  principal: principal;
  amount: float64;
  term_months: nat8;
  interest_rate: float64;
  purpose: LoanType;
  application_date: nat64;
  status: LoanStatus;
  approval_date: opt nat64;
  collateral_amount: opt float64;
  credit_score: opt nat16;
  monthly_payment: float64;
};

type PaymentStatus = variant {
  Pending;
  Completed;
  Failed;
};

type LoanPayment = record {
  id: text;
  loan_id: text;
  principal: principal;
  amount: float64;
  timestamp: nat64;
  status: PaymentStatus;
};

service : {
  apply_for_loan: (float64, nat8, LoanType) -> (LoanApplication);
  get_loans: () -> (vec LoanApplication) query;
  get_loan_details: (text) -> (opt LoanApplication) query;
  approve_loan: (text) -> (LoanApplication);
  reject_loan: (text) -> (LoanApplication);
  make_payment: (text, float64) -> (LoanPayment);
  get_payments: (text) -> (vec LoanPayment) query;
  calculate_eligibility: () -> (float64) query;
}